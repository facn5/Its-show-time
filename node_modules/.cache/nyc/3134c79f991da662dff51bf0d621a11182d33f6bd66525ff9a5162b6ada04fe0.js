var cov_1nviu62xtj=function(){var path="/home/tamer/github/showtime/Its-show-time/skeleton/logic.js";var hash="f4d39f2a100a40f447b56872860a1d5f2173c77b";var Function=function(){}.constructor;var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/tamer/github/showtime/Its-show-time/skeleton/logic.js",statementMap:{"0":{start:{line:5,column:20},end:{line:91,column:1}},"1":{start:{line:9,column:20},end:{line:9,column:21}},"2":{start:{line:12,column:6},end:{line:12,column:30}},"3":{start:{line:15,column:4},end:{line:15,column:28}},"4":{start:{line:21,column:4},end:{line:23,column:7}},"5":{start:{line:22,column:6},end:{line:22,column:46}},"6":{start:{line:31,column:24},end:{line:31,column:59}},"7":{start:{line:32,column:4},end:{line:32,column:41}},"8":{start:{line:33,column:4},end:{line:33,column:31}},"9":{start:{line:34,column:22},end:{line:34,column:53}},"10":{start:{line:35,column:4},end:{line:35,column:45}},"11":{start:{line:41,column:25},end:{line:41,column:56}},"12":{start:{line:42,column:4},end:{line:42,column:69}},"13":{start:{line:42,column:43},end:{line:42,column:67}},"14":{start:{line:49,column:4},end:{line:55,column:11}},"15":{start:{line:50,column:6},end:{line:53,column:7}},"16":{start:{line:51,column:8},end:{line:52,column:38}},"17":{start:{line:51,column:31},end:{line:51,column:55}},"18":{start:{line:52,column:13},end:{line:52,column:38}},"19":{start:{line:54,column:6},end:{line:54,column:46}},"20":{start:{line:62,column:24},end:{line:62,column:55}},"21":{start:{line:63,column:20},end:{line:63,column:51}},"22":{start:{line:64,column:23},end:{line:64,column:54}},"23":{start:{line:66,column:4},end:{line:66,column:61}},"24":{start:{line:66,column:41},end:{line:66,column:59}},"25":{start:{line:67,column:4},end:{line:67,column:68}},"26":{start:{line:67,column:47},end:{line:67,column:66}},"27":{start:{line:68,column:4},end:{line:68,column:44}},"28":{start:{line:69,column:4},end:{line:73,column:22}},"29":{start:{line:76,column:22},end:{line:76,column:53}},"30":{start:{line:77,column:4},end:{line:77,column:45}},"31":{start:{line:78,column:4},end:{line:85,column:11}},"32":{start:{line:79,column:6},end:{line:83,column:7}},"33":{start:{line:80,column:8},end:{line:80,column:35}},"34":{start:{line:81,column:8},end:{line:81,column:35}},"35":{start:{line:82,column:8},end:{line:82,column:51}},"36":{start:{line:84,column:6},end:{line:84,column:42}},"37":{start:{line:88,column:21},end:{line:88,column:52}},"38":{start:{line:89,column:4},end:{line:89,column:57}},"39":{start:{line:89,column:39},end:{line:89,column:55}},"40":{start:{line:97,column:0},end:{line:99,column:1}},"41":{start:{line:98,column:2},end:{line:98,column:33}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:15},end:{line:8,column:16}},loc:{start:{line:8,column:26},end:{line:16,column:3}},line:8},"1":{name:"incrementCounter",decl:{start:{line:11,column:13},end:{line:11,column:29}},loc:{start:{line:11,column:32},end:{line:13,column:5}},line:11},"2":{name:"(anonymous_2)",decl:{start:{line:20,column:23},end:{line:20,column:24}},loc:{start:{line:20,column:39},end:{line:24,column:3}},line:20},"3":{name:"(anonymous_3)",decl:{start:{line:21,column:21},end:{line:21,column:22}},loc:{start:{line:21,column:36},end:{line:23,column:5}},line:21},"4":{name:"(anonymous_4)",decl:{start:{line:26,column:11},end:{line:26,column:12}},loc:{start:{line:26,column:36},end:{line:36,column:3}},line:26},"5":{name:"(anonymous_5)",decl:{start:{line:37,column:14},end:{line:37,column:15}},loc:{start:{line:37,column:42},end:{line:43,column:3}},line:37},"6":{name:"(anonymous_6)",decl:{start:{line:42,column:33},end:{line:42,column:34}},loc:{start:{line:42,column:43},end:{line:42,column:67}},line:42},"7":{name:"(anonymous_7)",decl:{start:{line:44,column:12},end:{line:44,column:13}},loc:{start:{line:44,column:38},end:{line:56,column:3}},line:44},"8":{name:"(anonymous_8)",decl:{start:{line:49,column:24},end:{line:49,column:25}},loc:{start:{line:49,column:60},end:{line:55,column:5}},line:49},"9":{name:"(anonymous_9)",decl:{start:{line:57,column:13},end:{line:57,column:14}},loc:{start:{line:57,column:43},end:{line:74,column:3}},line:57},"10":{name:"(anonymous_10)",decl:{start:{line:66,column:33},end:{line:66,column:34}},loc:{start:{line:66,column:41},end:{line:66,column:59}},line:66},"11":{name:"(anonymous_11)",decl:{start:{line:67,column:39},end:{line:67,column:40}},loc:{start:{line:67,column:47},end:{line:67,column:66}},line:67},"12":{name:"(anonymous_12)",decl:{start:{line:75,column:12},end:{line:75,column:13}},loc:{start:{line:75,column:56},end:{line:86,column:3}},line:75},"13":{name:"(anonymous_13)",decl:{start:{line:78,column:30},end:{line:78,column:31}},loc:{start:{line:78,column:62},end:{line:85,column:5}},line:78},"14":{name:"(anonymous_14)",decl:{start:{line:87,column:11},end:{line:87,column:12}},loc:{start:{line:87,column:31},end:{line:90,column:3}},line:87},"15":{name:"(anonymous_15)",decl:{start:{line:89,column:29},end:{line:89,column:30}},loc:{start:{line:89,column:39},end:{line:89,column:55}},line:89}},branchMap:{"0":{loc:{start:{line:50,column:6},end:{line:53,column:7}},type:"if",locations:[{start:{line:50,column:6},end:{line:53,column:7}},{start:{line:50,column:6},end:{line:53,column:7}}],line:50},"1":{loc:{start:{line:51,column:8},end:{line:52,column:38}},type:"if",locations:[{start:{line:51,column:8},end:{line:52,column:38}},{start:{line:51,column:8},end:{line:52,column:38}}],line:51},"2":{loc:{start:{line:69,column:11},end:{line:73,column:21}},type:"cond-expr",locations:[{start:{line:70,column:8},end:{line:70,column:17}},{start:{line:71,column:8},end:{line:73,column:21}}],line:69},"3":{loc:{start:{line:71,column:8},end:{line:73,column:21}},type:"cond-expr",locations:[{start:{line:72,column:8},end:{line:72,column:20}},{start:{line:73,column:8},end:{line:73,column:21}}],line:71},"4":{loc:{start:{line:79,column:6},end:{line:83,column:7}},type:"if",locations:[{start:{line:79,column:6},end:{line:83,column:7}},{start:{line:79,column:6},end:{line:83,column:7}}],line:79},"5":{loc:{start:{line:97,column:0},end:{line:99,column:1}},type:"if",locations:[{start:{line:97,column:0},end:{line:99,column:1}},{start:{line:97,column:0},end:{line:99,column:1}}],line:97}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();// Part 1. Fill in any missing parts of the todoFunction object!
// you can access these on todo.todoFunctions
// For part one we expect you to use tdd
var todoFunctions=(cov_1nviu62xtj.s[0]++,{// todoFunctions.generateId() will give you a unique id
// You do not need to understand the implementation of this function.
generateId:function(){cov_1nviu62xtj.f[0]++;var idCounter=(cov_1nviu62xtj.s[1]++,0);function incrementCounter(){cov_1nviu62xtj.f[1]++;cov_1nviu62xtj.s[2]++;return idCounter+=1;}cov_1nviu62xtj.s[3]++;return incrementCounter;}(),//cloneArrayOfObjects will create a copy of the todos array
//changes to the new array don't affect the original
cloneArrayOfObjects:function(todos){cov_1nviu62xtj.f[2]++;cov_1nviu62xtj.s[4]++;return todos.map(function(todo){cov_1nviu62xtj.f[3]++;cov_1nviu62xtj.s[5]++;return JSON.parse(JSON.stringify(todo));});},addTodo:function(todos,newTodo){cov_1nviu62xtj.f[4]++;// should leave the input argument todos unchanged (you can use cloneArrayOfObjects)
// returns a new array, it should contain todos with the newTodo added to the end.
// add an id to the newTodo. You can use the generateId function to create an id.
// hint: array.concat
let clonedNewTodo=(cov_1nviu62xtj.s[6]++,JSON.parse(JSON.stringify(newTodo)));cov_1nviu62xtj.s[7]++;clonedNewTodo.id=this.generateId();cov_1nviu62xtj.s[8]++;clonedNewTodo.done=false;let clonedTodos=(cov_1nviu62xtj.s[9]++,this.cloneArrayOfObjects(todos));cov_1nviu62xtj.s[10]++;return clonedTodos.concat(clonedNewTodo);},deleteTodo:function(todos,idToDelete){cov_1nviu62xtj.f[5]++;// should leave the input argument todos unchanged (you can use cloneArrayOfObjects)
// return a new array, this should not contain any todo with an id of idToDelete
// hint: array.filter
let clonedNewTodos=(cov_1nviu62xtj.s[11]++,this.cloneArrayOfObjects(todos));cov_1nviu62xtj.s[12]++;return clonedNewTodos.filter(object=>{cov_1nviu62xtj.f[6]++;cov_1nviu62xtj.s[13]++;return object.id!==idToDelete;});},markTodo:function(todos,idToMark){cov_1nviu62xtj.f[7]++;cov_1nviu62xtj.s[14]++;// should leave the input argument todos unchanged (you can use cloneArrayOfObjects)
// in the new todo array, all elements will remain unchanged except the one with id: idToMark
// this element will have its done value toggled
// hint: array.map
return todos.reduce(function(updatedTodos,currentTodo){cov_1nviu62xtj.f[8]++;cov_1nviu62xtj.s[15]++;if(currentTodo.id===idToMark){cov_1nviu62xtj.b[0][0]++;cov_1nviu62xtj.s[16]++;if(!currentTodo.done){cov_1nviu62xtj.b[1][0]++;cov_1nviu62xtj.s[17]++;currentTodo.done=true;}else{cov_1nviu62xtj.b[1][1]++;cov_1nviu62xtj.s[18]++;currentTodo.done=false;}}else{cov_1nviu62xtj.b[0][1]++;}cov_1nviu62xtj.s[19]++;return updatedTodos.concat(currentTodo);},[]);},sortTodos:function(todos,sortFunction){cov_1nviu62xtj.f[9]++;// stretch goal! Do this last
// should leave the input arguement todos unchanged (you can use cloneArrayOfObjects)
// sortFunction will have same signature as the sort function in array.sort
// hint: array.slice, array.sort
let originalTodos=(cov_1nviu62xtj.s[20]++,this.cloneArrayOfObjects(todos));let doneTodos=(cov_1nviu62xtj.s[21]++,this.cloneArrayOfObjects(todos));let notDoneTodos=(cov_1nviu62xtj.s[22]++,this.cloneArrayOfObjects(todos));cov_1nviu62xtj.s[23]++;doneTodos=doneTodos.filter(todo=>{cov_1nviu62xtj.f[10]++;cov_1nviu62xtj.s[24]++;return todo.done===true;});cov_1nviu62xtj.s[25]++;notDoneTodos=notDoneTodos.filter(todo=>{cov_1nviu62xtj.f[11]++;cov_1nviu62xtj.s[26]++;return todo.done===false;});cov_1nviu62xtj.s[27]++;originalTodos=originalTodos.reverse();cov_1nviu62xtj.s[28]++;return sortFunction==="done"?(cov_1nviu62xtj.b[2][0]++,doneTodos):(cov_1nviu62xtj.b[2][1]++,sortFunction==="notDone"?(cov_1nviu62xtj.b[3][0]++,notDoneTodos):(cov_1nviu62xtj.b[3][1]++,originalTodos));},editTodo:function(todos,idToEdit,newName,newDesc){cov_1nviu62xtj.f[12]++;let clonedTodos=(cov_1nviu62xtj.s[29]++,this.cloneArrayOfObjects(todos));cov_1nviu62xtj.s[30]++;console.log("before edit :"+clonedTodos);cov_1nviu62xtj.s[31]++;return clonedTodos.reduce(function(todosAcc,currentTodo){cov_1nviu62xtj.f[13]++;cov_1nviu62xtj.s[32]++;if(currentTodo.id==idToEdit){cov_1nviu62xtj.b[4][0]++;cov_1nviu62xtj.s[33]++;currentTodo.name=newName;cov_1nviu62xtj.s[34]++;currentTodo.desc=newDesc;cov_1nviu62xtj.s[35]++;console.log("current todo : "+currentTodo);}else{cov_1nviu62xtj.b[4][1]++;}cov_1nviu62xtj.s[36]++;return todosAcc.concat(currentTodo);},[]);},todoObj:function(todos,id){cov_1nviu62xtj.f[14]++;let clonedtodo=(cov_1nviu62xtj.s[37]++,this.cloneArrayOfObjects(todos));cov_1nviu62xtj.s[38]++;return clonedtodo.filter(object=>{cov_1nviu62xtj.f[15]++;cov_1nviu62xtj.s[39]++;return object.id===id;});}});// Why is this if statement necessary?
// The answer has something to do with needing to run code both in the browser and in Node.js
// See this article for more details:
// http://www.matteoagosti.com/blog/2013/02/24/writing-javascript-modules-for-both-browser-and-node/
cov_1nviu62xtj.s[40]++;if(typeof module!=="undefined"){cov_1nviu62xtj.b[5][0]++;cov_1nviu62xtj.s[41]++;module.exports=todoFunctions;}else{cov_1nviu62xtj.b[5][1]++;}